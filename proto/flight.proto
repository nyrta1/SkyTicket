syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "googleapis/google/api/annotations.proto";

option go_package = "./;pb";

message Flight {
  int64 id = 1;
  string name = 2;
  string from = 3;
  string to = 4;
  google.protobuf.Timestamp departure_date = 6;
  google.protobuf.Timestamp arrival_date = 5;
  int64 available_first_slot = 7;
  int64 available_economy_slot = 8;
  string status = 9;
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
}

message GetFlightRequest {
  string name = 1;
  int64 id = 2;
}

message GetFlightResponse {
  repeated Flight flight_list = 1;
  int64 available_first_slot = 2;
  int64 available_economy_slot = 3;
}

message DeleteFlightRequest {
  int64 id = 1;
}

message ListFlightRequest {
  int64 page = 1;
  int64 limit = 2;
}

message ListFlightResponse {
  repeated Flight flight_list = 1;
  int64 total = 2;
  int64 page = 3;
}

message UpdateFlightRequest {
  int64 id = 1;
}

message UpdateFlightSlotRequest {
  int64 id = 1;
  int64 ticket_id = 2;
}

message SearchFlightRequest {
  int64 page = 1;
  int64 limit = 2;
  string from = 3;
  string to = 4;
  google.protobuf.Timestamp departure_date = 5;
  google.protobuf.Timestamp arrival_date = 6;
}

message SearchFlightResponse {
  repeated Flight flight_list = 1;
  int64 total = 2;
  int64 page = 3;
}

service FlightManager {
  rpc CreateFlight (Flight) returns (Flight) {
    option (google.api.http) = {
      post: "/v1/flights"
      body: "*"
    };
  }
  rpc UpdateFlight (Flight) returns (Flight) {
    option (google.api.http) = {
      put: "/v1/flights/{id}"
      body: "*"
    };
  }
  rpc DeleteFlight (DeleteFlightRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/flights/{id}"
    };
  }
  rpc UpdateFlightSlot (UpdateFlightSlotRequest) returns (Flight) {
    option (google.api.http) = {
      post: "/v1/flights/{id}/slots"
      body: "*"
    };
  }
  rpc GetFlight (GetFlightRequest) returns (GetFlightResponse) {
    option (google.api.http) = {
      get: "/v1/flights/{id}"
    };
  }
  rpc SearchFlight (SearchFlightRequest) returns (SearchFlightResponse) {
    option (google.api.http) = {
      get: "/v1/flights/search"
    };
  }
  rpc ListFlight (ListFlightRequest) returns (ListFlightResponse) {
    option (google.api.http) = {
      get: "/v1/flights/list"
    };
  }
}
